#!/usr/bin/env python3

import sys
import os
import yaml
import git


def update_remote(remote):
    remote.fetch()
    for r in remote.refs:
        branch_name = r.path.split("/")[-1]
        rfps = "refs/heads/"+branch_name+":refs/heads/"+remote.name+"/"+branch_name
        remote.fetch(rfps)

def clone_repo(repo_dict):
    repo = git.Repo.init(repo_dict["local-repo"], bare=True)
    repo.create_remote(repo_dict["remote-name"],repo_dict["remote-url"])
    for remote in repo.remotes:
        update_remote(remote)

def pull_repo(repo_dict):
    repo = git.Repo(repo_dict["local-repo"])

    if repo_dict["remote-name"] not in repo.remotes:
        repo.create_remote(repo_dict["remote-name"],repo_dict["remote-url"])

    for remote in repo.remotes:
        update_remote(remote)

def mirror_repo(repo_dict):
    if (os.path.exists(repo_dict["local-repo"])):
        pull_repo(repo_dict)
    else:
        clone_repo(repo_dict)

def main(repo_list_path):
    with open(repo_list_path, "r") as stream:
        try:
            content = yaml.safe_load(stream)
            for repo in content["repos"]:
                mirror_repo(repo)
        except yaml.YAMLError as exc:
            print(exc)

if __name__ == "__main__":
    main(sys.argv[1])
